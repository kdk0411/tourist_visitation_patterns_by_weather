name: Airflow DAG Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-env:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
    
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip3 install pyopenssl --upgrade
          pip install flake8 pytest apache-airflow
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          
      # check
      - run: |
          pwd
          ls
      
      - name: docker Install
        run: |
          sudo wget -qO- http://get.docker.com/ | sh
          docker -v
      
      - name: docker-compose install
        run: |
          curl -LfO 'https://airflow.apache.org/docs/apache-airflow/2.5.1/docker-compose.yaml'
          echo -e "AIRFLOW_UID=$(id -u)\nAIRFLOW_GID=0" > .env
          docker-compose -v
          
      - name: Build docker-compose airflow
        run: |
          docker compose -f docker-compose.yaml up -d
          docker ps -a

      - name: LOAD API Key
        run: |
          echo "AIRFLOW_WEATHER_API_KEY=${{secrets.AIRFLOW_WEATHER_API_KEY}}" >> .env
          echo "AIRFLOW_TOURISM_API_KEY=${{secrets.AIRFLOW_TOURISM_API_KEY}}" >> .env
          echo "AIRFLOW_SLACK_URL=${{secrets.AIRFLOW_SLACK_URL}}" >> .env
          cat .env
          
      - name: Lint with flake8
        run: |
          flake8 dags --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 dags --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics


      - name: airlfow Dag test
        run: |
          docker exec tourist_visitation_patterns_by_weather-airflow-webserver-1 sh -c 'airflow dags test tourism_data_pipeline 2024-01-01'
          docker exec tourist_visitation_patterns_by_weather-airflow-webserver-1 sh -c 'airflow dags test Weather_to_Redshift 2023-12-31'
  

      
      # - name: Test with pytest
      #   env:
      #     AIRFLOW_TOURISM_API_KEY: ${{ secrets.AIRFLOW_TOURISM_API_KEY }}
      #     AIRFLOW_WEATHER_API_KEY: ${{ secrets.AIRFLOW_WEATHER_API_KEY }}
      #     AIRFLOW_SLACK_URL: ${{ secrets.AIRFLOW_SLACK_URL }}
      #   run: |
      #     export AIRFLOW__CORE__DAGS_FOLDER=$(pwd)/dags
      #     pytest --verbose --disable-warnings
